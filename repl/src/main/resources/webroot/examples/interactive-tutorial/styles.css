/** The frame holding each individual interactive code sample */
.interactive-frame {

    position: relative; /** We will surely want to position things relatively to the frame.. */

    /** Let's tweak how it looks.. */
    border: 1px solid #444;
    max-width: 600px;

}

/** Hints & run dialog */
.hint-and-run {
    background-color: green;
    color: white;
    margin: 0;
    padding: 0.3em;
    display: flex;
    justify-content: space-between;
	align-items: center;
}
.hint-and-run p {
    margin: 0;
	padding-right: 0.3em;
}
.hint-and-run button {
    border: 0;
	flex-grow: 0;
	flex-shrink: 0;
    width: 4em;
	background-color: transparent;
	text-align: right;
}
.hint-and-run button:focus { border: 0; outline: none; }
.hint-and-run button > * { width: 100%; }

/* Button / loader */
.hint-and-run button .loader { display: none }
.hint-and-run button .run { display: inline }
.hint-and-run button:disabled .loader {display: inline }
.hint-and-run button:disabled .run {display: none }

/** Results are displayed over the editor */
.result-display {
    position: absolute;
    top: 0; bottom: 0; left:0; right: 0;
    display: none;
    background-color: white;
    opacity: 0.9;
    z-index: 50;
}
.result-display a { position: absolute; top: 0; right: 1em; z-index: 10; background-color: white;  }
.result-display pre {
	position: absolute;
    width: 100%;
    height: 100%;
    overflow: auto;
	padding-top: 1.5em; /** Allow the close button to not cover output unless user scrolled down */
	padding-left: 0.5em;
}
